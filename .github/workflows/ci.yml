name: Continuous Integration

# This workflow is triggered on pull requests to the main branch
on:
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set package name from package.json
        id: set_package_name
        run: |
          PACKAGE_NAME=$(jq -r '.name' package.json)
          echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_ENV
          echo "package_name=$PACKAGE_NAME" >> $GITHUB_ENV
        shell: bash

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      - name: Run Linter
        run: npm run lint

      - name: Run Tests
        run: npm test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          load: true
          tags: ${{ env.PACKAGE_NAME }}:pr-${{ github.event.pull_request.number }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

    # Optional: Push the image to a registry
    # - name: Log in to Docker Hub
    #   uses: docker/login-action@v1
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}
    # - name: Push Docker image
    #   uses: docker/build-push-action@v2
    #   with:
    #     context: .
    #     file: ./Dockerfile
    #     push: true
    #     tags: your-registry/${{ env.PACKAGE_NAME }}:pr-${{ github.event.pull_request.number }}
